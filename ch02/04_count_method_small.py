# coding: utf-8
import sys

sys.path.append('..')
import numpy as np
import matplotlib.pyplot as plt
from common.util import preprocess, create_co_matrix, ppmi

text = 'You say goodbye and I say hello.'
corpus, word_to_id, id_to_word = preprocess(text)
vocab_size = len(id_to_word)
C = create_co_matrix(corpus, vocab_size, window_size=1)
# print("C:", C)
# C: [[0 1 0 0 0 0 0]
#  [1 0 1 0 1 1 0]
#  [0 1 0 1 0 0 0]
#  [0 0 1 0 1 0 0]
#  [0 1 0 1 0 0 0]
#  [0 1 0 0 0 0 1]
#  [0 0 0 0 0 1 0]]

W = ppmi(C)
# print("W:", W)
# W: [[0.        1.8073549 0.        0.        0.        0.        0.       ]
#  [1.8073549 0.        0.8073549 0.        0.8073549 0.8073549 0.       ]
#  [0.        0.8073549 0.        1.8073549 0.        0.        0.       ]
#  [0.        0.        1.8073549 0.        1.8073549 0.        0.       ]
#  [0.        0.8073549 0.        1.8073549 0.        0.        0.       ]
#  [0.        0.8073549 0.        0.        0.        0.        2.807355 ]
#  [0.        0.        0.        0.        0.        2.807355  0.       ]]

# SVD
U, S, V = np.linalg.svd(W)
# print("U:", U)
# U: [[ 3.40948761e-01 -1.11022302e-16 -1.20516241e-01 -4.16333634e-16
#   -9.32324946e-01 -1.11022302e-16 -2.42574685e-17]
#  [ 0.00000000e+00 -5.97636402e-01  0.00000000e+00  1.80237904e-01
#    0.00000000e+00 -7.81245828e-01  0.00000000e+00]
#  [ 4.36312199e-01 -5.55111512e-17 -5.08782864e-01 -2.22044605e-16
#    2.25325629e-01 -1.38777878e-17 -7.07106769e-01]
#  [ 1.66533454e-16 -4.97828126e-01  2.77555756e-17  6.80396318e-01
#   -1.11022302e-16  5.37799239e-01  7.46693292e-17]
#  [ 4.36312199e-01 -3.12375064e-17 -5.08782864e-01 -1.59998290e-16
#    2.25325629e-01 -1.30164976e-17  7.07106769e-01]
#  [ 7.09237099e-01 -3.12375064e-17  6.83926761e-01 -1.59998290e-16
#    1.70958877e-01 -1.30164976e-17  2.31390806e-17]
#  [-1.66533454e-16 -6.28488600e-01 -4.16333634e-17 -7.10334539e-01
#    2.22044605e-16  3.16902101e-01 -9.61431563e-17]]

# print("S:", S)
# S: [3.1680453e+00 3.1680453e+00 2.7029872e+00 2.7029872e+00 1.5144811e+00
#  1.5144811e+00 4.1317175e-17]

# print("V:", V)
# V: [[-0.0000000e+00  5.9763640e-01  1.6653345e-16  4.9782813e-01
#    2.7755576e-16 -2.2204460e-16  6.2848860e-01]
#  [-3.4094876e-01  0.0000000e+00 -4.3631220e-01  0.0000000e+00
#   -4.3631220e-01 -7.0923710e-01 -0.0000000e+00]
#  [ 0.0000000e+00 -1.8023790e-01  1.3877788e-17 -6.8039632e-01
#   -1.1102230e-16  8.3266727e-17  7.1033454e-01]
#  [ 1.2051624e-01 -5.5511151e-16  5.0878286e-01  0.0000000e+00
#    5.0878286e-01 -6.8392676e-01 -0.0000000e+00]
#  [-0.0000000e+00 -7.8124583e-01 -3.3306691e-16  5.3779924e-01
#   -1.6653345e-16  2.7755576e-16  3.1690210e-01]
#  [-9.3232495e-01 -5.5511151e-17  2.2532563e-01  0.0000000e+00
#    2.2532563e-01  1.7095888e-01 -0.0000000e+00]
#  [-0.0000000e+00 -3.2049378e-17 -7.0710677e-01  2.7755576e-17
#    7.0710677e-01 -3.7007435e-17 -2.7755576e-17]]

np.set_printoptions(precision=3)  # 有效位数为3位
# print(C[0])
# [0 1 0 0 0 0 0]
# print(W[0])
# [0.    1.807 0.    0.    0.    0.    0.   ]
# print(U[0])
# [ 3.409e-01 -1.110e-16 -1.205e-01 -4.163e-16 -9.323e-01 -1.110e-16
#  -2.426e-17]

# plot
for word, word_id in word_to_id.items():
    plt.annotate(word, (U[word_id, 0], U[word_id, 1]))
plt.scatter(U[:, 0], U[:, 1], alpha=0.5)
plt.show()
plt.savefig('04_count_method_small.png')